name: Upload Artifacts to S3
description: |
  Uploads module artifacts to S3 bucket.

inputs:
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  github-ref:
    description: 'GitHub ref'
    required: true
  osnick:
    description: 'OS Nickname'
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with: # todo: use role instead of access key
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: "us-east-1"
    - name: Upload artifacts to S3 - staging
      shell: bash
      run: |
        echo ::group::install aws cli
          python3 -m venv .aws-cli-venv && source .aws-cli-venv/bin/activate &&
          pip3 install --upgrade pip && pip3 install --no-cache-dir awscli && rm -rf /var/cache/apk/*
        echo ::endgroup::
        echo ::group::upload artifacts
          SNAPSHOT=1 SHOW=1 VERBOSE=1 ./sbin/upload-artifacts
        echo ::endgroup::
        echo ::group::upload staging release
          RELEASE=1 SHOW=1 STAGING=1 VERBOSE=1 ./sbin/upload-artifacts
        echo ::endgroup::
        
        echo ::group::upload production release
          # todo: trigger this manually instead
          if [[ "${{ inputs.github-ref}}" != 'refs/heads/master' ]]; then
            RELEASE=1 SHOW=1 VERBOSE=1 ./sbin/upload-artifacts
          fi
        echo ::endgroup::