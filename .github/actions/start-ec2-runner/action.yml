name: Start EC2 instance
description: 'Start an EC2 instance for CI, with the specified AMI and instance type'

inputs:
  aws-image-id:
    description: 'The ID of the AMI to use'
    default: ami-0d8e10b4bd5d65c57  # Ubuntu 22.04 region AMI for ARM with Docker installed
    type: string
  aws_instance_type:
    description: 'The type of the instance to start'
    default: t4g.medium
    type: string
  tag:
    description: 'The tag to apply to the instance'
    default: | # Make sure there is no trailing comma!
      [
        {"Key": "Name",         "Value": "redisjson-ci-runner"},
        {"Key": "Environment",  "Value": "CI"},
        {"Key": "Run ID",       "Value": "${{ github.run_id }}"},
        {"Key": "PR",           "Value": "${{ github.event.number }}"},
        {"Key": "Owner",        "Value": "${{ github.actor }}"},
        {"Key": "Project",      "Value": "${{ github.repository }}"}
      ]
    type: string

  #### secrets ####
  ci_gh_p_token:
    description: 'The GitHub personal access token'
    required: true
    type: string
  ci_cto_aws_ec2_subnet_id:
    description: 'The ID of the subnet to launch the instance in'
    required: true
    type: string
  ci_cto_aws_ec2_sg_id:
    description: 'The ID of the security group to apply to the instance'
    required: true
    type: string

  
outputs:
  label:
    description: 'The label of the EC2 instance'
    value: ${{ steps.start-ec2-runner.outputs.label }}
  ec2-instance-id:
    description: 'The ID of the EC2 instance, should be used in runs-on field'
    value: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
  aws-access-key-id:
    description: 'The ID of the AWS access key, used to stop the EC2 runner'
    value: ${{ steps.creds.outputs.aws-access-key-id }}
  aws-secret-access-key:
    description: 'The AWS secret access key, used to stop the EC2 runner'
    value: ${{ steps.creds.outputs.aws-secret-access-key }}

runs:
  using: composite
  defaults:
    run:
      shell: bash
  steps:
    - name: Configure AWS Credentials 1
      id: creds
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ue-north-1
        role-to-assume: arn:aws:iam::513600691417:role/GitHubActionsRedisJSONEc2
        output-credentials: true
    - name: get caller identity 1
      run: |
        aws sts get-caller-identity
    - name: Configure AWS Credentials 2
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ue-north-1
        aws-access-key-id: ${{ steps.creds.outputs.aws-access-key-id }}
        aws-secret-access-key: ${{ steps.creds.outputs.aws-secret-access-key }}
        aws-session-token: ${{ steps.creds.outputs.aws-session-token }}
        role-to-assume: arn:aws:iam::513600691417:role/GitHubActionsRedisJSONEc2
    - name: get caller identity2
      run: |
        aws sts get-caller-identity
    - name: Start EC2 instance
      id: start-ec2-runner
      uses: machulav/ec2-github-runner@v2
      with:
        mode: start
        ec2-image-id: ${{ inputs.aws-image-id }}
        ec2-instance-type: ${{ inputs.aws_instance_type }}
        aws-resource-tags: ${{ inputs.tag }}
        github-token: ${{ inputs.ci_gh_p_token }}
        subnet-id: ${{ inputs.ci_cto_aws_ec2_subnet_id }}
        security-group-id: ${{ inputs.ci_cto_aws_ec2_sg_id }}
