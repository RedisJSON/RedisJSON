name: alpine ARM64

on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    types:
      - opened
      - reopened
      - review_requested
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
    inputs:
      redis-ref:
        description: 'Redis ref to checkout'
        required: true
        default: 'unstable'
  workflow_call: # Allows to run this workflow from another workflow
    inputs:
      redis-ref:
        description: 'Redis ref to checkout'
        type: string
        required: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      TAGGED: ${{ steps.set-env.outputs.TAGGED }}
      TAG: ${{ steps.set-env.outputs.TAG }}
      BRANCH: ${{ steps.set-env.outputs.BRANCH }}
      TAG_OR_BRANCH: ${{ steps.set-env.outputs.TAG }}${{ steps.set-env.outputs.BRANCH }}
      redis-ref: ${{ steps.set-env.outputs.redis-ref }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: set env
        id: set-env
        uses: ./.github/actions/setup-env
        with:
          github-ref: ${{ github.ref }}
          redis-ref: ${{ inputs.redis-ref }}

  alpine-arm64:
    runs-on: ubuntu24-arm64-4-16 # ubuntu24-arm64-2-8
    needs: setup-environment
    defaults:
      run:
        shell: bash
    env:
      TAGGED: ${{ needs.setup-environment.outputs.TAGGED }}
      VERSION: ${{ needs.setup-environment.outputs.TAG }}
      BRANCH: ${{ needs.setup-environment.outputs.BRANCH }}
      TAG_OR_BRANCH: ${{ needs.setup-environment.outputs.TAG_OR_BRANCH}}

      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      ACTIONS_RUNNER_FORCED_INTERNAL_NODE_VERSION: node16
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
    container:
      image: alpine:3 # required to run the job on the ARM instance
    steps:
      - name: Workaround alpine-arm64 GHA issues
        shell: sh
        run: |
          cp /etc/os-release /etc/os-release.bak
          sed -i 's/ID=alpine/ID=NotpineForGHA/g' /etc/os-release
      - name: Install prerequisites
        shell: sh
        run: |
          echo ::group::install packages
            apk add bash make libtool tar cmake python3 python3-dev \
            py3-pip gcc git curl build-base autoconf automake py3-cryptography \
            linux-headers musl-dev libffi-dev openssl-dev openssh py-virtualenv \
            clang18-libclang gcompat libstdc++ libgcc g++ openblas-dev \
            xsimd git xz bsd-compat-headers clang18 cargo
          echo ::endgroup::
      - name: Checkout the module
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Checkout Redis
        uses: actions/checkout@v3
        with:
          repository: 'redis/redis'
          ref: ${{needs.setup-environment.outputs.redis-ref}}
          path: 'redis'
      - name: Install python dependencies
        run: |
          echo ::group::install requirements
            pip install -q --upgrade setuptools
            pip install -q --upgrade pip
            pip install -q -r tests/pytest/requirements.txt
            pip install -q -r .install/build_package_requirements.txt
          echo ::endgroup::
        env:
          PIP_BREAK_SYSTEM_PACKAGES: 1
      - name: build
        uses: ./.github/actions/build-json-module-and-redis
      - name: Test
        run: |
          make test
      - name: Pack module
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE # to avoid git error
          mv /etc/os-release.bak /etc/os-release
          make pack BRANCH=$TAG_OR_BRANCH SHOW=1
          sed -i 's/ID=alpine/ID=NotpineForGHA/g' /etc/os-release
      - name: Upload artifacts to S3
        uses: ./.github/actions/upload-artifacts-to-s3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          github-ref: ${{ github.ref }}