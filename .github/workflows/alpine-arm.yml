name: Build and Test alpine ARM

on:
  push:

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: start ranner
        id: start-ec2-runner
        uses: ./.github/actions/start-ec2-runner
        with:
          ci_cto_aws_access_key_id: ${{ secrets.CI_CTO_AWS_ACCESS_KEY_ID }}
          ci_cto_aws_secret_access_key: ${{ secrets.CI_CTO_AWS_SECRET_ACCESS_KEY }}
          ci_cto_aws_region: ${{ secrets.CI_CTO_AWS_REGION }}
          ci_gh_p_token: ${{ secrets.CI_GH_P_TOKEN }}
          ci_cto_aws_ec2_subnet_id: ${{ secrets.CI_CTO_AWS_EC2_SUBNET_ID }}
          ci_cto_aws_ec2_sg_id: ${{ secrets.CI_CTO_AWS_EC2_SG_ID }}


  test:
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.ec2-instance-id }}
    defaults:
      run:
        shell: bash
    container:
      image: arm64v8/alpine # required to run the job on the ARM instance
    steps:
      - name: Install prerequisites
        shell: sh
        run: |
          apk add bash make tar cargo python3 python3-dev py3-pip gcc git curl build-base autoconf automake py3-cryptography linux-headers musl-dev libffi-dev openssl-dev openssh py-virtualenv clang18-libclang

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - test  # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: stop runner
        uses: ./.github/actions/stop-ec2-runner
        with:
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
          ci_cto_aws_access_key_id: ${{ secrets.CI_CTO_AWS_ACCESS_KEY_ID }}
          ci_cto_aws_secret_access_key: ${{ secrets.CI_CTO_AWS_SECRET_ACCESS_KEY }}
          ci_cto_aws_region: ${{ secrets.CI_CTO_AWS_REGION }}
          ci_gh_p_token: ${{ secrets.CI_GH_P_TOKEN }}