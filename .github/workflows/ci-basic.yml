name: CI Basic

on:
  push:
    paths-ignore:
      - '.circleci/**'
      - 'docs/**'
      - '*.md'
    branches-ignore:
      - main
      - master
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+'
      - 'feature-*'
    tags-ignore:
      - 'v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-m[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-linux-jammy:
    runs-on: "ubuntu-latest"
    container:
        image: "ubuntu:jammy"
    defaults:
      run:
        shell: bash -l -eo pipefail {0}
    steps:
      - name: Install git
        shell: bash
        run: |
          apt get update && apt-get install -y git
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        shell: bash
        working-directory: .install
        run: |
          echo ::group::Install dependencies
          ./ubuntu_22.04.sh
          echo ::endgroup::
          echo ::group::Install rust
          ./getrust.sh
          echo ::endgroup::
      - name: Get Redis
        uses: actions/checkout@v3
        with:
          repository: redis/redis
          ref: 'unstable' # todo change per version/tag
          path: redis
      - name: Build Redis
        working-directory: redis
        shell: bash
        run: |
          find .
          make install
      - name: Build module
        shell: bash
        run: |
          . "$HOME/.cargo/env" # to use cargo with the same version for all
          cargo --version
          cargo build --release
      - name: Run tests
        shell: bash
        run: |
          echo ::group::Activate virtual environment
          ./.install/activate_venv.sh
          echo ::endgroup::
          echo ::group::Install python dependencies
          ./.install/common_installations.sh
          echo ::endgroup::
          echo ::group::Flow tests
          MODULE=$(realpath ./target/release/librejson.so) RLTEST_ARGS='--no-progress' ./tests/pytest/tests.sh
          echo ::endgroup::
          echo ::group::Unit tests
          . "$HOME/.cargo/env" # to use cargo with the same version for all
          cargo test
          echo ::endgroup::
        env:
          PIP_BREAK_SYSTEM_PACKAGES: 1
