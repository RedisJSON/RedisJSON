name: Build for Ubuntu

on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - '.circleci/**'
      - 'docs/**'
      - '*.md'

# https://github.com/actions/checkout/issues/1487
# A workaround for the old runtime is to use these environment
# variables, install the latest version of git within the container,
# and use the actions/checkout@v3 instead of @v4, until it is fixed.
env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
  ACTIONS_RUNNER_FORCED_INTERNAL_NODE_VERSION: node16
  ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
  DEBIAN_FRONTEND: noninteractive

jobs:
  build:
    strategy:
      matrix:
        docker_image: ["ubuntu:bionic", "ubuntu:focal", "ubuntu:jammy"]
    runs-on: "ubuntu-latest"
    container:
        image: ${{ matrix.docker_image }}
    defaults:
      run:
        shell: bash -l -eo pipefail {0}
    steps:
      - name: Update git
        run: |
          apt update
          apt install -y software-properties-common
          add-apt-repository ppa:git-core/ppa -y
          apt update
          apt install -y git
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install python 3.12
        run: |
          apt install -y wget build-essential libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev
          wget https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tgz
          tar xzf Python-3.12.2.tgz
          cd Python-3.12.2
          ./configure --enable-optimizations
          make -j
          make altinstall
          python3 --version
          python3.12 --version
          pip3.12 --version
          update-alternatives --install /usr/bin/python3 python3 `which python3.12` 1
          python3 --version
      - name: Install prerequisites
        run: |
          apt install -y make build-essential pkg-config python3-pip libclang-dev clang
          ./deps/readies/bin/getaws
          ./deps/readies/bin/getrust
          python3 -m pip list
          python3 -m pip install --upgrade setuptools six pip addict toml jinja2 ramp-packer
          python3 -m pip install -r tests/pytest/requirements.txt
      - name: Get Redis
        uses: actions/checkout@v3
        with:
          repository: redis/redis
          ref: '7.2.1'
          path: redis
      - name: Build Redis
        working-directory: redis
        run: |
          make -j
          make install
      - name: Build module
        run: |
          make build OSNICK=jammy VERSION=${{ github.ref_name }} TEST=1 OFFICIAL=1 SHOW=1
      - name: Test
        run: |
          make test
      - name: Pack module
        run: |
          make pack BRANCH=${{ github.ref_name }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
      - name: Upload artifacts to S3 - staging
        run: |
          make upload-artifacts SHOW=1 VERBOSE=1
          make upload-release SHOW=1 STAGING=1 VERBOSE=1
      - name: Upload artifacts to S3 - release  # todo: trigger this manually instead
        if: ${{ github.ref != 'refs/heads/master' }}
        run: make upload-release SHOW=1 VERBOSE=1

